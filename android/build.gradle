buildscript {
    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.6.4'
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
        maven { url 'https://install.felgo.com/maven/' }
    }
}

apply plugin: 'com.android.application'

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "androidx.appcompat:appcompat:1.2.0"

    implementation "com.google.android.gms:play-services-instantapps:17.0.0"

}

android {
    /*******************************************************
     * The following variables:
     * - androidBuildToolsVersion,
     * - androidCompileSdkVersion
     * - qt5AndroidDir - holds the path to qt android files
     *                   needed to build any Qt application
     *                   on Android.
     *
     * are defined in gradle.properties file. This file is
     * updated by QtCreator and androiddeployqt tools.
     * Changing them manually might break the compilation!
     *******************************************************/

    compileSdkVersion project.hasProperty("androidCompileSdkVersion") ? androidCompileSdkVersion.toInteger() : 30
    buildToolsVersion project.hasProperty("androidBuildToolsVersion") ? androidBuildToolsVersion : "30.0.1"

    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }

    defaultConfig {
        multiDexEnabled true
        targetSdkVersion project.hasProperty("androidCompileSdkVersion") ? androidCompileSdkVersion.toInteger() : 30
        applicationId = project.hasProperty("productIdentifier") ? productIdentifier : "at.cb.PortfolioWebApp"
        versionCode = project.hasProperty("productVersionCode") ? productVersionCode.toInteger() : 30
        versionName = project.hasProperty("productVersionName") ? productVersionName : 30
        minSdkVersion project.hasProperty("qtMinSdkVersion") ? qtMinSdkVersion.toInteger() : 21

        int qtVersionNr = project.hasProperty("qtVersionInt") ? qtVersionInt.toInteger() : 5132
        if (qtVersionNr < 5140) {
            resValue('array', 'load_local_libs', "")
        } else if (qtVersionNr >= 5140) {
            resValue('array', 'bundled_in_lib', "")
            resValue('array', 'bundled_in_assets', "")
        }
    }

    buildTypes {
        release {
            // Enables code shrinking, obfuscation, and optimization for only
            // your project's release build type.
            minifyEnabled true

            // Enables resource shrinking, which is performed by the
            // Android Gradle plugin.
            shrinkResources true

            // Includes the default ProGuard rules files that are packaged with
            // the Android Gradle plugin. To learn more, go to the section about
            // R8 configuration files.
            proguardFiles getDefaultProguardFile(
                    'proguard-android-optimize.txt'),
                    'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            def qt5Dir = project.hasProperty("qt5AndroidDir") ? qt5AndroidDir : ""

            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = [qt5Dir + '/src', 'src', 'java']
            aidl.srcDirs = [qt5Dir + '/src', 'src', 'aidl']
            res.srcDirs = [qt5Dir + '/res', 'res']
            resources.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['libs']
        }
    }

    lintOptions {
        abortOnError false
    }
    aaptOptions { // Do not compress Qt binary resources file
        noCompress 'rcc'
    }
    tasks.withType(JavaCompile) {
        options.incremental = true
    }
}

